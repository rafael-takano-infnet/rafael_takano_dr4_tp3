@page "/properties/filter"
@model CityBreaks.Web.Pages.Properties.FilterModel
@{
    ViewData["Title"] = "Filtrar Propriedades";
}

<h1>@ViewData["Title"]</h1>

<form method="get" class="row g-3 mb-4">
    <div class="col-md-3">
        <label for="MinPrice" class="form-label">Preço Mínimo (R$)</label>
        <input type="number" step="0.01" class="form-control" name="MinPrice" value="@Model.MinPrice" />
    </div>

    <div class="col-md-3">
        <label for="MaxPrice" class="form-label">Preço Máximo (R$)</label>
        <input type="number" step="0.01" class="form-control" name="MaxPrice" value="@Model.MaxPrice" />
    </div>

    <div class="col-md-3">
        <label for="CityName" class="form-label">Cidade</label>
        <input type="text" class="form-control" name="CityName" value="@Model.CityName" placeholder="Digite o nome da cidade" />
    </div>

    <div class="col-md-3">
        <label for="PropertyName" class="form-label">Nome da Propriedade</label>
        <input type="text" class="form-control" name="PropertyName" value="@Model.PropertyName" placeholder="Digite parte do nome" />
    </div>

    <div class="col-12">
        <button type="submit" class="btn btn-primary">Buscar</button>
        <a asp-page="/Properties/Filter" class="btn btn-outline-secondary">Limpar Filtros</a>
    </div>
</form>

@if (Model.HasFilters)
{
    <div class="alert alert-info">
        <h6>Filtros aplicados:</h6>
        <ul class="mb-0">
            @if (Model.MinPrice.HasValue)
            {
                <li>Preço mínimo: R$ @Model.MinPrice.Value.ToString("F2")</li>
            }
            @if (Model.MaxPrice.HasValue)
            {
                <li>Preço máximo: R$ @Model.MaxPrice.Value.ToString("F2")</li>
            }
            @if (!string.IsNullOrEmpty(Model.CityName))
            {
                <li>Cidade: @Model.CityName</li>
            }
            @if (!string.IsNullOrEmpty(Model.PropertyName))
            {
                <li>Nome da propriedade: @Model.PropertyName</li>
            }
        </ul>
    </div>
}

<div class="row">
    @if (Model.Properties.Any())
    {
        @foreach (var property in Model.Properties)
        {
            <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@property.Name</h5>
                        <p class="card-text">
                            @property.City.Name, @property.City.Country.CountryName
                        </p>
                        <p class="card-text">
                            <span class="badge bg-success fs-6">R$ @property.PricePerNight.ToString("F2")/noite</span>
                        </p>
                        <a asp-page="/Properties/Edit" asp-route-id="@property.Id" class="btn btn-outline-primary btn-sm">Editar</a>
                        <a asp-page="/Cities/Details" asp-route-name="@property.City.Name" class="btn btn-outline-info btn-sm">Ver Cidade</a>
                    </div>
                </div>
            </div>
        }
    }
    else if (Model.HasFilters)
    {
        <div class="col-12">
            <div class="alert alert-warning">
                <h5>Nenhuma propriedade encontrada</h5>
                <p>Tente ajustar os filtros para encontrar propriedades disponíveis.</p>
            </div>
        </div>
    }
    else
    {
        <div class="col-12">
            <div class="alert alert-info">
                <h5>Use os filtros acima para buscar propriedades</h5>
                <p>Você pode filtrar por preço, cidade ou nome da propriedade.</p>
            </div>
        </div>
    }
</div>

<div class="mt-4">
    <p class="text-muted">
        Encontradas @Model.Properties.Count propriedades
        @if (Model.HasFilters)
        {
	        <span>com os filtros aplicados</span>
        }
    </p>
</div>

<div class="mt-3">
	<a asp-page="/Index" class="btn btn-secondary">← Voltar ao Início</a>
</div>